diff --git core/pom.xml core/pom.xml
index 65219678..309b50ad 100644
--- core/pom.xml
+++ core/pom.xml
@@ -101,22 +101,39 @@
         <dependency>
             <groupId>org.apache.hadoop</groupId>
             <artifactId>hadoop-client</artifactId>
+            <exclusions>
+                <exclusion>
+                    <artifactId>commons-lang</artifactId>
+                    <groupId>commons-lang</groupId>
+                </exclusion>
+            </exclusions>
         </dependency>
 
         <dependency>
             <groupId>org.apache.hadoop</groupId>
             <artifactId>hadoop-yarn-api</artifactId>
+            <exclusions>
+                <exclusion>
+                    <groupId>commons-lang</groupId>
+                    <artifactId>commons-lang</artifactId>
+                </exclusion>
+            </exclusions>
         </dependency>
 
         <dependency>
             <groupId>org.apache.hadoop</groupId>
             <artifactId>hadoop-yarn-common</artifactId>
+            <exclusions>
+                <exclusion>
+                    <artifactId>commons-lang</artifactId>
+                    <groupId>commons-lang</groupId>
+                </exclusion>
+            </exclusions>
         </dependency>
 
         <dependency>
             <groupId>org.apache.commons</groupId>
             <artifactId>commons-lang3</artifactId>
-            <scope>test</scope>
         </dependency>
 
         <dependency>
@@ -131,6 +148,10 @@
                     <groupId>tomcat</groupId>
                     <artifactId>jasper-runtime</artifactId>
                 </exclusion>
+                <exclusion>
+                    <artifactId>commons-lang</artifactId>
+                    <groupId>commons-lang</groupId>
+                </exclusion>
             </exclusions>
         </dependency>
 
@@ -165,17 +186,33 @@
                     <groupId>org.pentaho</groupId>
                     <artifactId>pentaho-aggdesigner-algorithm</artifactId>
                 </exclusion>
+                <exclusion>
+                        <groupId>commons-lang</groupId>
+                        <artifactId>commons-lang</artifactId>
+                </exclusion>
             </exclusions>
         </dependency>
         <dependency>
             <groupId>net.hydromatic</groupId>
             <artifactId>aggdesigner-algorithm</artifactId>
             <version>6.0</version>
+            <exclusions>
+                <exclusion>
+                    <groupId>commons-lang</groupId>
+                    <artifactId>commons-lang</artifactId>
+                </exclusion>
+            </exclusions>
         </dependency>
         <dependency>
             <groupId>org.apache.hive.hcatalog</groupId>
             <artifactId>hive-hcatalog-server-extensions</artifactId>
             <scope>compile</scope>
+            <exclusions>
+                <exclusion>
+                    <groupId>commons-lang</groupId>
+                    <artifactId>commons-lang</artifactId>
+                </exclusion>
+            </exclusions>
         </dependency>
 
         <dependency>
@@ -220,11 +257,6 @@
             </exclusions>
         </dependency>
 
-        <dependency>
-            <groupId>commons-lang</groupId>
-            <artifactId>commons-lang</artifactId>
-        </dependency>
-
         <dependency>
             <groupId>net.sf.ehcache</groupId>
             <artifactId>ehcache-core</artifactId>
diff --git core/src/main/java/org/apache/oozie/CoordinatorEngine.java core/src/main/java/org/apache/oozie/CoordinatorEngine.java
index 0aa56d1e..07bab122 100644
--- core/src/main/java/org/apache/oozie/CoordinatorEngine.java
+++ core/src/main/java/org/apache/oozie/CoordinatorEngine.java
@@ -35,7 +35,7 @@ import java.util.Map;
 import java.util.Set;
 import java.util.StringTokenizer;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.oozie.client.CoordinatorAction;
 import org.apache.oozie.client.CoordinatorJob;
diff --git core/src/main/java/org/apache/oozie/action/ActionExecutor.java core/src/main/java/org/apache/oozie/action/ActionExecutor.java
index 1770b973..24facf65 100644
--- core/src/main/java/org/apache/oozie/action/ActionExecutor.java
+++ core/src/main/java/org/apache/oozie/action/ActionExecutor.java
@@ -19,7 +19,7 @@
 package org.apache.oozie.action;
 
 import com.google.common.base.Charsets;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.conf.Configuration;
diff --git core/src/main/java/org/apache/oozie/action/hadoop/JHSCredentials.java core/src/main/java/org/apache/oozie/action/hadoop/JHSCredentials.java
index 74101904..34262d8a 100644
--- core/src/main/java/org/apache/oozie/action/hadoop/JHSCredentials.java
+++ core/src/main/java/org/apache/oozie/action/hadoop/JHSCredentials.java
@@ -18,7 +18,7 @@
 
 package org.apache.oozie.action.hadoop;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.io.Text;
 import org.apache.hadoop.mapreduce.v2.api.HSClientProtocol;
diff --git core/src/main/java/org/apache/oozie/command/coord/CoordChangeXCommand.java core/src/main/java/org/apache/oozie/command/coord/CoordChangeXCommand.java
index 00ceb9d5..1192f8c7 100644
--- core/src/main/java/org/apache/oozie/command/coord/CoordChangeXCommand.java
+++ core/src/main/java/org/apache/oozie/command/coord/CoordChangeXCommand.java
@@ -26,7 +26,7 @@ import java.util.Map;
 import java.util.Map.Entry;
 import java.util.Set;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.oozie.CoordinatorActionBean;
 import org.apache.oozie.CoordinatorJobBean;
 import org.apache.oozie.ErrorCode;
diff --git core/src/main/java/org/apache/oozie/command/coord/CoordCommandUtils.java core/src/main/java/org/apache/oozie/command/coord/CoordCommandUtils.java
index 4e4a569f..4712ca90 100644
--- core/src/main/java/org/apache/oozie/command/coord/CoordCommandUtils.java
+++ core/src/main/java/org/apache/oozie/command/coord/CoordCommandUtils.java
@@ -64,7 +64,7 @@ import org.jdom.Attribute;
 import org.jdom.Element;
 import org.jdom.JDOMException;
 import org.quartz.CronExpression;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.oozie.CoordinatorJobBean;
 
 public class CoordCommandUtils {
diff --git core/src/main/java/org/apache/oozie/command/coord/CoordMaterializeTransitionXCommand.java core/src/main/java/org/apache/oozie/command/coord/CoordMaterializeTransitionXCommand.java
index ec9ef418..eb09a626 100644
--- core/src/main/java/org/apache/oozie/command/coord/CoordMaterializeTransitionXCommand.java
+++ core/src/main/java/org/apache/oozie/command/coord/CoordMaterializeTransitionXCommand.java
@@ -18,7 +18,7 @@
 
 package org.apache.oozie.command.coord;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.oozie.AppType;
 import org.apache.oozie.CoordinatorActionBean;
diff --git core/src/main/java/org/apache/oozie/command/coord/CoordPushDependencyCheckXCommand.java core/src/main/java/org/apache/oozie/command/coord/CoordPushDependencyCheckXCommand.java
index 41b78af2..d7a143ad 100644
--- core/src/main/java/org/apache/oozie/command/coord/CoordPushDependencyCheckXCommand.java
+++ core/src/main/java/org/apache/oozie/command/coord/CoordPushDependencyCheckXCommand.java
@@ -24,7 +24,7 @@ import java.net.URI;
 import java.util.Date;
 import java.util.List;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.oozie.CoordinatorActionBean;
 import org.apache.oozie.CoordinatorJobBean;
diff --git core/src/main/java/org/apache/oozie/command/coord/CoordSLAAlertsXCommand.java core/src/main/java/org/apache/oozie/command/coord/CoordSLAAlertsXCommand.java
index 96be7ad5..ff6605ad 100644
--- core/src/main/java/org/apache/oozie/command/coord/CoordSLAAlertsXCommand.java
+++ core/src/main/java/org/apache/oozie/command/coord/CoordSLAAlertsXCommand.java
@@ -23,7 +23,7 @@ import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.oozie.CoordinatorActionBean;
 import org.apache.oozie.CoordinatorJobBean;
diff --git core/src/main/java/org/apache/oozie/command/coord/CoordUpdateXCommand.java core/src/main/java/org/apache/oozie/command/coord/CoordUpdateXCommand.java
index 758c5c25..8ab0a8a5 100644
--- core/src/main/java/org/apache/oozie/command/coord/CoordUpdateXCommand.java
+++ core/src/main/java/org/apache/oozie/command/coord/CoordUpdateXCommand.java
@@ -24,7 +24,7 @@ import java.io.StringReader;
 import java.util.Date;
 
 import com.google.common.base.Charsets;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.oozie.CoordinatorJobBean;
 import org.apache.oozie.ErrorCode;
diff --git core/src/main/java/org/apache/oozie/coord/CoordELFunctions.java core/src/main/java/org/apache/oozie/coord/CoordELFunctions.java
index c3fecd87..b4ea212f 100644
--- core/src/main/java/org/apache/oozie/coord/CoordELFunctions.java
+++ core/src/main/java/org/apache/oozie/coord/CoordELFunctions.java
@@ -22,7 +22,7 @@ import com.google.common.annotations.VisibleForTesting;
 import com.google.common.base.Preconditions;
 import com.google.common.collect.Lists;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.oozie.ErrorCode;
 import org.apache.oozie.client.OozieClient;
diff --git core/src/main/java/org/apache/oozie/coord/CoordUtils.java core/src/main/java/org/apache/oozie/coord/CoordUtils.java
index e0c6af96..f8581fdc 100644
--- core/src/main/java/org/apache/oozie/coord/CoordUtils.java
+++ core/src/main/java/org/apache/oozie/coord/CoordUtils.java
@@ -30,7 +30,7 @@ import java.util.Map;
 import java.util.HashMap;
 import java.util.concurrent.TimeUnit;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.oozie.CoordinatorActionBean;
 import org.apache.oozie.CoordinatorEngine;
diff --git core/src/main/java/org/apache/oozie/coord/input/dependency/AbstractCoordInputDependency.java core/src/main/java/org/apache/oozie/coord/input/dependency/AbstractCoordInputDependency.java
index 79355ebc..013417ed 100644
--- core/src/main/java/org/apache/oozie/coord/input/dependency/AbstractCoordInputDependency.java
+++ core/src/main/java/org/apache/oozie/coord/input/dependency/AbstractCoordInputDependency.java
@@ -30,7 +30,7 @@ import java.util.Map;
 import java.util.Map.Entry;
 import java.util.Set;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.io.Writable;
 import org.apache.oozie.CoordinatorActionBean;
 import org.apache.oozie.command.CommandException;
diff --git core/src/main/java/org/apache/oozie/coord/input/dependency/CoordInputDependencyFactory.java core/src/main/java/org/apache/oozie/coord/input/dependency/CoordInputDependencyFactory.java
index ea154672..0a6572a8 100644
--- core/src/main/java/org/apache/oozie/coord/input/dependency/CoordInputDependencyFactory.java
+++ core/src/main/java/org/apache/oozie/coord/input/dependency/CoordInputDependencyFactory.java
@@ -20,7 +20,7 @@ package org.apache.oozie.coord.input.dependency;
 
 import java.io.UnsupportedEncodingException;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.oozie.StringBlob;
 import org.apache.oozie.util.WritableUtils;
 import org.apache.oozie.util.XLog;
diff --git core/src/main/java/org/apache/oozie/coord/input/dependency/CoordOldInputDependency.java core/src/main/java/org/apache/oozie/coord/input/dependency/CoordOldInputDependency.java
index af298b99..b25131e3 100644
--- core/src/main/java/org/apache/oozie/coord/input/dependency/CoordOldInputDependency.java
+++ core/src/main/java/org/apache/oozie/coord/input/dependency/CoordOldInputDependency.java
@@ -32,7 +32,7 @@ import java.util.List;
 import java.util.Map;
 import java.util.Set;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.security.AccessControlException;
 import org.apache.oozie.CoordinatorActionBean;
diff --git core/src/main/java/org/apache/oozie/coord/input/dependency/CoordPullInputDependency.java core/src/main/java/org/apache/oozie/coord/input/dependency/CoordPullInputDependency.java
index 358f6f9d..9174a48b 100644
--- core/src/main/java/org/apache/oozie/coord/input/dependency/CoordPullInputDependency.java
+++ core/src/main/java/org/apache/oozie/coord/input/dependency/CoordPullInputDependency.java
@@ -29,7 +29,7 @@ import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.oozie.CoordinatorActionBean;
 import org.apache.oozie.command.CommandException;
 import org.apache.oozie.command.coord.CoordCommandUtils;
diff --git core/src/main/java/org/apache/oozie/coord/input/dependency/CoordUnResolvedInputDependency.java core/src/main/java/org/apache/oozie/coord/input/dependency/CoordUnResolvedInputDependency.java
index 096b5888..90539b19 100644
--- core/src/main/java/org/apache/oozie/coord/input/dependency/CoordUnResolvedInputDependency.java
+++ core/src/main/java/org/apache/oozie/coord/input/dependency/CoordUnResolvedInputDependency.java
@@ -24,7 +24,7 @@ import java.io.IOException;
 import java.util.ArrayList;
 import java.util.List;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.io.Writable;
 import org.apache.oozie.coord.CoordELFunctions;
 import org.apache.oozie.util.WritableUtils;
diff --git core/src/main/java/org/apache/oozie/coord/input/logic/CoordInputLogicBuilder.java core/src/main/java/org/apache/oozie/coord/input/logic/CoordInputLogicBuilder.java
index 2326cd7c..8153c8d2 100644
--- core/src/main/java/org/apache/oozie/coord/input/logic/CoordInputLogicBuilder.java
+++ core/src/main/java/org/apache/oozie/coord/input/logic/CoordInputLogicBuilder.java
@@ -20,7 +20,7 @@ package org.apache.oozie.coord.input.logic;
 
 import java.io.IOException;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 
 public class CoordInputLogicBuilder {
 
diff --git core/src/main/java/org/apache/oozie/coord/input/logic/CoordInputLogicEvaluatorPhaseTwo.java core/src/main/java/org/apache/oozie/coord/input/logic/CoordInputLogicEvaluatorPhaseTwo.java
index 16fc4004..2f62668c 100644
--- core/src/main/java/org/apache/oozie/coord/input/logic/CoordInputLogicEvaluatorPhaseTwo.java
+++ core/src/main/java/org/apache/oozie/coord/input/logic/CoordInputLogicEvaluatorPhaseTwo.java
@@ -24,7 +24,7 @@ import java.util.Arrays;
 import java.util.Date;
 import java.util.List;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.oozie.CoordinatorActionBean;
 import org.apache.oozie.coord.CoordELConstants;
 import org.apache.oozie.coord.CoordELEvaluator;
diff --git core/src/main/java/org/apache/oozie/coord/input/logic/CoordInputLogicEvaluatorResult.java core/src/main/java/org/apache/oozie/coord/input/logic/CoordInputLogicEvaluatorResult.java
index 2f3f0343..50bf80e3 100644
--- core/src/main/java/org/apache/oozie/coord/input/logic/CoordInputLogicEvaluatorResult.java
+++ core/src/main/java/org/apache/oozie/coord/input/logic/CoordInputLogicEvaluatorResult.java
@@ -18,7 +18,7 @@
 
 package org.apache.oozie.coord.input.logic;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.oozie.coord.CoordELFunctions;
 
 public class CoordInputLogicEvaluatorResult {
diff --git core/src/main/java/org/apache/oozie/coord/input/logic/CoordInputLogicEvaluatorUtil.java core/src/main/java/org/apache/oozie/coord/input/logic/CoordInputLogicEvaluatorUtil.java
index 2306edeb..64c15c88 100644
--- core/src/main/java/org/apache/oozie/coord/input/logic/CoordInputLogicEvaluatorUtil.java
+++ core/src/main/java/org/apache/oozie/coord/input/logic/CoordInputLogicEvaluatorUtil.java
@@ -24,7 +24,7 @@ import org.apache.commons.jexl2.Expression;
 import org.apache.commons.jexl2.JexlContext;
 import org.apache.commons.jexl2.JexlEngine;
 import org.apache.commons.jexl2.NamespaceResolver;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.oozie.CoordinatorActionBean;
 import org.apache.oozie.ErrorCode;
 import org.apache.oozie.command.CommandException;
diff --git core/src/main/java/org/apache/oozie/coord/input/logic/InputLogicParser.java core/src/main/java/org/apache/oozie/coord/input/logic/InputLogicParser.java
index f1f6b419..1571f317 100644
--- core/src/main/java/org/apache/oozie/coord/input/logic/InputLogicParser.java
+++ core/src/main/java/org/apache/oozie/coord/input/logic/InputLogicParser.java
@@ -20,7 +20,7 @@ package org.apache.oozie.coord.input.logic;
 
 import java.util.List;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.jdom.Element;
 import org.jdom.Namespace;
 
diff --git core/src/main/java/org/apache/oozie/dependency/DependencyChecker.java core/src/main/java/org/apache/oozie/dependency/DependencyChecker.java
index 5e9ae746..a432ffa8 100644
--- core/src/main/java/org/apache/oozie/dependency/DependencyChecker.java
+++ core/src/main/java/org/apache/oozie/dependency/DependencyChecker.java
@@ -24,7 +24,7 @@ import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.oozie.ErrorCode;
 import org.apache.oozie.client.OozieClient;
diff --git core/src/main/java/org/apache/oozie/executor/jpa/WorkflowsJobGetJPAExecutor.java core/src/main/java/org/apache/oozie/executor/jpa/WorkflowsJobGetJPAExecutor.java
index 9e68f49c..f9df23be 100644
--- core/src/main/java/org/apache/oozie/executor/jpa/WorkflowsJobGetJPAExecutor.java
+++ core/src/main/java/org/apache/oozie/executor/jpa/WorkflowsJobGetJPAExecutor.java
@@ -342,21 +342,21 @@ public class WorkflowsJobGetJPAExecutor implements JPAExecutor<WorkflowsInfo> {
                     if(offset > 0) {
                         throw new IllegalArgumentException("offset must be minus from currentTime.");
                     }
-                    createdTime = org.apache.commons.lang.time.DateUtils.addDays(new Date(), offset);
+                    createdTime = org.apache.commons.lang3.time.DateUtils.addDays(new Date(), offset);
                     break;
                 case 'h':
                     offset =  Integer.parseInt(time.substring(0, time.length() - 1));
                     if(offset > 0) {
                         throw new IllegalArgumentException("offset must be minus from currentTime.");
                     }
-                    createdTime = org.apache.commons.lang.time.DateUtils.addHours(new Date(), offset);
+                    createdTime = org.apache.commons.lang3.time.DateUtils.addHours(new Date(), offset);
                     break;
                 case 'm':
                     offset =  Integer.parseInt(time.substring(0, time.length() - 1));
                     if(offset > 0) {
                         throw new IllegalArgumentException("offset must be minus from currentTime.");
                     }
-                    createdTime = org.apache.commons.lang.time.DateUtils.addMinutes(new Date(), offset);
+                    createdTime = org.apache.commons.lang3.time.DateUtils.addMinutes(new Date(), offset);
                     break;
                 case 'Z':
                     createdTime = DateUtils.parseDateUTC(time);
diff --git core/src/main/java/org/apache/oozie/service/AbandonedCoordCheckerService.java core/src/main/java/org/apache/oozie/service/AbandonedCoordCheckerService.java
index 0ff23e68..c350f8e2 100644
--- core/src/main/java/org/apache/oozie/service/AbandonedCoordCheckerService.java
+++ core/src/main/java/org/apache/oozie/service/AbandonedCoordCheckerService.java
@@ -21,7 +21,7 @@ import java.sql.Timestamp;
 import java.util.Date;
 import java.util.List;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.oozie.CoordinatorJobBean;
 import org.apache.oozie.action.email.EmailActionExecutor;
 import org.apache.oozie.command.CommandException;
diff --git core/src/main/java/org/apache/oozie/service/AuthorizationService.java core/src/main/java/org/apache/oozie/service/AuthorizationService.java
index 6f72c419..8299122d 100644
--- core/src/main/java/org/apache/oozie/service/AuthorizationService.java
+++ core/src/main/java/org/apache/oozie/service/AuthorizationService.java
@@ -33,7 +33,7 @@ import java.util.LinkedHashSet;
 import com.google.common.base.Charsets;
 import com.google.common.collect.Sets;
 import org.apache.commons.io.FilenameUtils;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
diff --git core/src/main/java/org/apache/oozie/service/ConfigurationService.java core/src/main/java/org/apache/oozie/service/ConfigurationService.java
index 8345da7e..4da8233e 100644
--- core/src/main/java/org/apache/oozie/service/ConfigurationService.java
+++ core/src/main/java/org/apache/oozie/service/ConfigurationService.java
@@ -20,7 +20,7 @@ package org.apache.oozie.service;
 
 import com.google.common.base.Strings;
 import com.google.common.annotations.VisibleForTesting;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.oozie.ErrorCode;
 import org.apache.oozie.util.ConfigUtils;
diff --git core/src/main/java/org/apache/oozie/service/HadoopAccessorService.java core/src/main/java/org/apache/oozie/service/HadoopAccessorService.java
index 05cdc555..51455822 100644
--- core/src/main/java/org/apache/oozie/service/HadoopAccessorService.java
+++ core/src/main/java/org/apache/oozie/service/HadoopAccessorService.java
@@ -21,7 +21,7 @@ package org.apache.oozie.service;
 import com.google.common.base.Preconditions;
 import com.google.common.base.Strings;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.fs.FileStatus;
 import org.apache.hadoop.io.Text;
 import org.apache.hadoop.mapred.Master;
diff --git core/src/main/java/org/apache/oozie/service/JPAService.java core/src/main/java/org/apache/oozie/service/JPAService.java
index cefcb43b..a34051c6 100644
--- core/src/main/java/org/apache/oozie/service/JPAService.java
+++ core/src/main/java/org/apache/oozie/service/JPAService.java
@@ -34,7 +34,7 @@ import javax.persistence.Query;
 
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.dbcp.BasicDataSource;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.oozie.BundleActionBean;
 import org.apache.oozie.BundleJobBean;
diff --git core/src/main/java/org/apache/oozie/service/JobsConcurrencyService.java core/src/main/java/org/apache/oozie/service/JobsConcurrencyService.java
index da2b9aab..2334f7e0 100644
--- core/src/main/java/org/apache/oozie/service/JobsConcurrencyService.java
+++ core/src/main/java/org/apache/oozie/service/JobsConcurrencyService.java
@@ -22,7 +22,7 @@ import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.oozie.util.ConfigUtils;
 import org.apache.oozie.util.Instrumentable;
 import org.apache.oozie.util.Instrumentation;
diff --git core/src/main/java/org/apache/oozie/service/ShareLibService.java core/src/main/java/org/apache/oozie/service/ShareLibService.java
index b88dab3a..4d974cec 100644
--- core/src/main/java/org/apache/oozie/service/ShareLibService.java
+++ core/src/main/java/org/apache/oozie/service/ShareLibService.java
@@ -44,7 +44,7 @@ import java.util.Properties;
 import java.util.Set;
 import java.util.TimeZone;
 import java.util.Map.Entry;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.FileStatus;
 import org.apache.hadoop.fs.FileSystem;
diff --git core/src/main/java/org/apache/oozie/service/XLogStreamingService.java core/src/main/java/org/apache/oozie/service/XLogStreamingService.java
index f841425e..49945ad2 100644
--- core/src/main/java/org/apache/oozie/service/XLogStreamingService.java
+++ core/src/main/java/org/apache/oozie/service/XLogStreamingService.java
@@ -18,8 +18,8 @@
 
 package org.apache.oozie.service;
 
-import org.apache.commons.lang.StringEscapeUtils;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringEscapeUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.oozie.util.Instrumentable;
 import org.apache.oozie.util.Instrumentation;
 import org.apache.oozie.util.XLogStreamer;
@@ -93,7 +93,7 @@ public class XLogStreamingService implements Service, Instrumentable {
     protected void streamLog(XLogStreamer logStreamer, Date startTime, Date endTime, Writer writer, boolean appendDebug)
             throws IOException {
         if (!logStreamer.isLogEnabled()) {
-            writer.write(StringEscapeUtils.escapeHtml(logStreamer.getLogDisableMessage()));
+            writer.write(StringEscapeUtils.escapeHtml4(logStreamer.getLogDisableMessage()));
             return;
         }
         logStreamer.streamLog(writer, startTime, endTime, appendDebug);
diff --git core/src/main/java/org/apache/oozie/service/ZKXLogStreamingService.java core/src/main/java/org/apache/oozie/service/ZKXLogStreamingService.java
index 9aa3276a..2b780d35 100644
--- core/src/main/java/org/apache/oozie/service/ZKXLogStreamingService.java
+++ core/src/main/java/org/apache/oozie/service/ZKXLogStreamingService.java
@@ -27,8 +27,8 @@ import java.util.List;
 import java.util.Map;
 import java.util.TreeMap;
 
-import org.apache.commons.lang.StringEscapeUtils;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringEscapeUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.curator.x.discovery.ServiceInstance;
 import org.apache.oozie.ErrorCode;
 import org.apache.oozie.client.OozieClient;
@@ -104,7 +104,7 @@ public class ZKXLogStreamingService extends XLogStreamingService implements Serv
     public void streamLog(XLogStreamer logStreamer, Date startTime, Date endTime, Writer writer) throws IOException {
 
         if (!logStreamer.isLogEnabled()) {
-            writer.write(StringEscapeUtils.escapeHtml(logStreamer.getLogDisableMessage()));
+            writer.write(StringEscapeUtils.escapeHtml4(logStreamer.getLogDisableMessage()));
             return;
         }
         // If ALL_SERVERS_PARAM is set to false, then only stream our log
@@ -188,11 +188,11 @@ public class ZKXLogStreamingService extends XLogStreamingService implements Serv
 
             //If log param debug is set, we need to write start date and end date to outputstream.
             if(!StringUtils.isEmpty(logStreamer.getXLogFilter().getTruncatedMessage())){
-                writer.write(StringEscapeUtils.escapeHtml(logStreamer.getXLogFilter().getTruncatedMessage()));
+                writer.write(StringEscapeUtils.escapeHtml4(logStreamer.getXLogFilter().getTruncatedMessage()));
             }
 
             if (logStreamer.getXLogFilter().isDebugMode()) {
-                writer.write(StringEscapeUtils.escapeHtml(logStreamer.getXLogFilter().getDebugMessage()));
+                writer.write(StringEscapeUtils.escapeHtml4(logStreamer.getXLogFilter().getDebugMessage()));
             }
             // Add a message about any servers we couldn't contact
             if (!badOozies.isEmpty()) {
@@ -227,7 +227,7 @@ public class ZKXLogStreamingService extends XLogStreamingService implements Serv
                     // The first entry will be the earliest based on the timestamp (also removes it) from the map
                     TimestampedMessageParser earliestParser = timestampMap.pollFirstEntry().getValue();
                     // Write the message from that parser at that timestamp
-                    writer.write(StringEscapeUtils.escapeHtml(earliestParser.getLastMessage()));
+                    writer.write(StringEscapeUtils.escapeHtml4(earliestParser.getLastMessage()));
                     if (logStreamer.shouldFlushOutput(earliestParser.getLastMessage().length())) {
                         writer.flush();
                     }
@@ -241,7 +241,7 @@ public class ZKXLogStreamingService extends XLogStreamingService implements Serv
                 if (timestampMap.size() == 1) {
                     TimestampedMessageParser parser = timestampMap.values().iterator().next();
                     // don't forget the last message read by the parser
-                    writer.write(StringEscapeUtils.escapeHtml(parser.getLastMessage()));
+                    writer.write(StringEscapeUtils.escapeHtml4(parser.getLastMessage()));
                     parser.processRemaining(writer, logStreamer);
                 }
             }
diff --git core/src/main/java/org/apache/oozie/servlet/BaseAdminServlet.java core/src/main/java/org/apache/oozie/servlet/BaseAdminServlet.java
index 85610eb5..98f0eeb1 100644
--- core/src/main/java/org/apache/oozie/servlet/BaseAdminServlet.java
+++ core/src/main/java/org/apache/oozie/servlet/BaseAdminServlet.java
@@ -29,7 +29,7 @@ import javax.servlet.ServletException;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.fs.Path;
 import org.apache.oozie.BuildInfo;
 import org.apache.oozie.ErrorCode;
diff --git core/src/main/java/org/apache/oozie/servlet/JsonRestServlet.java core/src/main/java/org/apache/oozie/servlet/JsonRestServlet.java
index 17dc6862..016b6944 100644
--- core/src/main/java/org/apache/oozie/servlet/JsonRestServlet.java
+++ core/src/main/java/org/apache/oozie/servlet/JsonRestServlet.java
@@ -18,7 +18,7 @@
 
 package org.apache.oozie.servlet;
 
-import org.apache.commons.lang.StringEscapeUtils;
+import org.apache.commons.lang3.StringEscapeUtils;
 import org.apache.oozie.client.OozieClient.SYSTEM_MODE;
 import org.apache.oozie.client.rest.JsonBean;
 import org.apache.oozie.client.rest.RestConstants;
@@ -402,7 +402,7 @@ public abstract class JsonRestServlet extends HttpServlet {
             throws IOException {
         response.setHeader(RestConstants.OOZIE_ERROR_CODE, error);
         response.setHeader(RestConstants.OOZIE_ERROR_MESSAGE, message);
-        response.sendError(statusCode, StringEscapeUtils.escapeHtml(message));
+        response.sendError(statusCode, StringEscapeUtils.escapeHtml4(message));
     }
 
     protected void sendJsonResponse(HttpServletResponse response, int statusCode, JSONStreamAware json)
diff --git core/src/main/java/org/apache/oozie/servlet/V1JobsServlet.java core/src/main/java/org/apache/oozie/servlet/V1JobsServlet.java
index a582b1b1..6edcca35 100644
--- core/src/main/java/org/apache/oozie/servlet/V1JobsServlet.java
+++ core/src/main/java/org/apache/oozie/servlet/V1JobsServlet.java
@@ -35,7 +35,7 @@ import javax.servlet.http.HttpServletResponse;
 
 import com.google.common.base.Strings;
 import com.google.common.collect.Lists;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.FSDataOutputStream;
 import org.apache.hadoop.fs.FileSystem;
diff --git core/src/main/java/org/apache/oozie/servlet/V2JobServlet.java core/src/main/java/org/apache/oozie/servlet/V2JobServlet.java
index c2b90c17..a0231bfa 100644
--- core/src/main/java/org/apache/oozie/servlet/V2JobServlet.java
+++ core/src/main/java/org/apache/oozie/servlet/V2JobServlet.java
@@ -26,7 +26,7 @@ import java.util.Map;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.oozie.BaseEngine;
 import org.apache.oozie.BaseEngineException;
diff --git core/src/main/java/org/apache/oozie/store/StoreStatusFilter.java core/src/main/java/org/apache/oozie/store/StoreStatusFilter.java
index cba75df8..74c65e86 100644
--- core/src/main/java/org/apache/oozie/store/StoreStatusFilter.java
+++ core/src/main/java/org/apache/oozie/store/StoreStatusFilter.java
@@ -343,21 +343,21 @@ public class StoreStatusFilter {
                     if(offset > 0) {
                         throw new IllegalArgumentException("offset must be minus from currentTime.");
                     }
-                    createdTime = org.apache.commons.lang.time.DateUtils.addDays(new Date(), offset);
+                    createdTime = org.apache.commons.lang3.time.DateUtils.addDays(new Date(), offset);
                     break;
                 case 'h':
                     offset =  Integer.parseInt(time.substring(0, time.length() - 1));
                     if(offset > 0) {
                         throw new IllegalArgumentException("offset must be minus from currentTime.");
                     }
-                    createdTime = org.apache.commons.lang.time.DateUtils.addHours(new Date(), offset);
+                    createdTime = org.apache.commons.lang3.time.DateUtils.addHours(new Date(), offset);
                     break;
                 case 'm':
                     offset =  Integer.parseInt(time.substring(0, time.length() - 1));
                     if(offset > 0) {
                         throw new IllegalArgumentException("offset must be minus from currentTime.");
                     }
-                    createdTime = org.apache.commons.lang.time.DateUtils.addMinutes(new Date(), offset);
+                    createdTime = org.apache.commons.lang3.time.DateUtils.addMinutes(new Date(), offset);
                     break;
                 case 'Z':
                     createdTime = DateUtils.parseDateUTC(time);
diff --git core/src/main/java/org/apache/oozie/util/ClasspathUtils.java core/src/main/java/org/apache/oozie/util/ClasspathUtils.java
index bfe2f3ea..fc404b47 100644
--- core/src/main/java/org/apache/oozie/util/ClasspathUtils.java
+++ core/src/main/java/org/apache/oozie/util/ClasspathUtils.java
@@ -150,7 +150,7 @@ public class ClasspathUtils {
 
         String appClassPath = conf.get(YarnConfiguration.YARN_APPLICATION_CLASSPATH);
 
-        if (org.apache.commons.lang.StringUtils.isEmpty(appClassPath)) {
+        if (org.apache.commons.lang3.StringUtils.isEmpty(appClassPath)) {
             addPathToYarnClasspathInConfig(conf, pathStr, StringUtils.join(File.pathSeparator,
                     YarnConfiguration.DEFAULT_YARN_CROSS_PLATFORM_APPLICATION_CLASSPATH));
         } else {
@@ -164,6 +164,6 @@ public class ClasspathUtils {
     }
 
     private static String normalizedLocalFsPath(Path libPath) {
-        return org.apache.commons.lang.StringUtils.replace(libPath.toString(), FSUtils.FILE_SCHEME_PREFIX, "");
+        return org.apache.commons.lang3.StringUtils.replace(libPath.toString(), FSUtils.FILE_SCHEME_PREFIX, "");
     }
 }
diff --git core/src/main/java/org/apache/oozie/util/ELConstantsFunctions.java core/src/main/java/org/apache/oozie/util/ELConstantsFunctions.java
index 731b4898..35ef75c9 100644
--- core/src/main/java/org/apache/oozie/util/ELConstantsFunctions.java
+++ core/src/main/java/org/apache/oozie/util/ELConstantsFunctions.java
@@ -158,7 +158,7 @@ public class ELConstantsFunctions {
      * @return the trimmed version of the given string or the empty string if the given string was <code>null</code>
      */
     public static String trim(String input) {
-        return org.apache.commons.lang.StringUtils.trimToEmpty(input);
+        return org.apache.commons.lang3.StringUtils.trimToEmpty(input);
     }
 
     /**
diff --git core/src/main/java/org/apache/oozie/util/Pair.java core/src/main/java/org/apache/oozie/util/Pair.java
index 4ece0d35..f943a7b0 100644
--- core/src/main/java/org/apache/oozie/util/Pair.java
+++ core/src/main/java/org/apache/oozie/util/Pair.java
@@ -18,7 +18,7 @@
 
 package org.apache.oozie.util;
 
-import org.apache.commons.lang.ObjectUtils;
+import org.apache.commons.lang3.ObjectUtils;
 
 /**
  * Utility class for holding a pair of data
diff --git core/src/main/java/org/apache/oozie/util/ParamChecker.java core/src/main/java/org/apache/oozie/util/ParamChecker.java
index e445dd83..e86971f5 100644
--- core/src/main/java/org/apache/oozie/util/ParamChecker.java
+++ core/src/main/java/org/apache/oozie/util/ParamChecker.java
@@ -22,7 +22,7 @@ import java.util.Date;
 import java.util.List;
 import java.util.TimeZone;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.quartz.CronExpression;
 import java.text.ParseException;
 
diff --git core/src/main/java/org/apache/oozie/util/TimestampedMessageParser.java core/src/main/java/org/apache/oozie/util/TimestampedMessageParser.java
index 5c71ea1f..f0d05797 100644
--- core/src/main/java/org/apache/oozie/util/TimestampedMessageParser.java
+++ core/src/main/java/org/apache/oozie/util/TimestampedMessageParser.java
@@ -24,7 +24,7 @@ import java.io.Writer;
 import java.util.ArrayList;
 import java.util.regex.Pattern;
 
-import org.apache.commons.lang.StringEscapeUtils;
+import org.apache.commons.lang3.StringEscapeUtils;
 import org.apache.oozie.service.Services;
 import org.apache.oozie.service.XLogStreamingService;
 import org.apache.oozie.util.LogLine.MATCHED_PATTERN;
@@ -205,7 +205,7 @@ public class TimestampedMessageParser {
      */
     public void processRemaining(Writer writer, XLogStreamer logStreamer) throws IOException {
         while (increment()) {
-            writer.write(StringEscapeUtils.escapeHtml(lastMessage));
+            writer.write(StringEscapeUtils.escapeHtml4(lastMessage));
             if (logStreamer.shouldFlushOutput(lastMessage.length())) {
                 writer.flush();
             }
diff --git core/src/main/java/org/apache/oozie/util/XLogFilter.java core/src/main/java/org/apache/oozie/util/XLogFilter.java
index a5897bfa..494cfd5a 100644
--- core/src/main/java/org/apache/oozie/util/XLogFilter.java
+++ core/src/main/java/org/apache/oozie/util/XLogFilter.java
@@ -28,7 +28,7 @@ import java.util.Map;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.oozie.service.ConfigurationService;
 import org.apache.oozie.util.LogLine.MATCHED_PATTERN;
 
@@ -428,7 +428,7 @@ public class XLogFilter {
      * @throws IOException Signals that an I/O exception has occurred.
      */
     public Date adjustOffset(Date date, int offset) throws IOException {
-        return org.apache.commons.lang.time.DateUtils.addMinutes(date, offset);
+        return org.apache.commons.lang3.time.DateUtils.addMinutes(date, offset);
     }
 
     public void setFilterPattern(Pattern filterPattern) {
diff --git core/src/main/java/org/apache/oozie/util/XLogStreamer.java core/src/main/java/org/apache/oozie/util/XLogStreamer.java
index 6edfa22d..90e3f356 100644
--- core/src/main/java/org/apache/oozie/util/XLogStreamer.java
+++ core/src/main/java/org/apache/oozie/util/XLogStreamer.java
@@ -30,8 +30,8 @@ import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 import java.io.BufferedReader;
 
-import org.apache.commons.lang.StringEscapeUtils;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringEscapeUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.oozie.client.rest.RestConstants;
 import org.apache.oozie.command.CommandException;
 import org.apache.oozie.service.ConfigurationService;
@@ -115,10 +115,10 @@ public class XLogStreamer {
         try {
             if (appendDebug) {
                 if (!StringUtils.isEmpty(logFilter.getTruncatedMessage())) {
-                    writer.write(StringEscapeUtils.escapeHtml(logFilter.getTruncatedMessage()));
+                    writer.write(StringEscapeUtils.escapeHtml4(logFilter.getTruncatedMessage()));
                 }
                 if (logFilter.isDebugMode()) {
-                    writer.write(StringEscapeUtils.escapeHtml(logFilter.getDebugMessage()));
+                    writer.write(StringEscapeUtils.escapeHtml4(logFilter.getDebugMessage()));
                 }
             }
             // Process the entire logs from the reader using the logFilter
diff --git core/src/main/java/org/apache/oozie/util/XLogUserFilterParam.java core/src/main/java/org/apache/oozie/util/XLogUserFilterParam.java
index 3bc948ea..603a8c7d 100644
--- core/src/main/java/org/apache/oozie/util/XLogUserFilterParam.java
+++ core/src/main/java/org/apache/oozie/util/XLogUserFilterParam.java
@@ -26,7 +26,7 @@ import java.util.Date;
 import java.util.HashSet;
 import java.util.Map;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.oozie.ErrorCode;
 import org.apache.oozie.client.rest.RestConstants;
 import org.apache.oozie.command.CommandException;
diff --git core/src/main/java/org/apache/oozie/workflow/lite/LiteWorkflowAppParser.java core/src/main/java/org/apache/oozie/workflow/lite/LiteWorkflowAppParser.java
index a767124b..e06bc875 100644
--- core/src/main/java/org/apache/oozie/workflow/lite/LiteWorkflowAppParser.java
+++ core/src/main/java/org/apache/oozie/workflow/lite/LiteWorkflowAppParser.java
@@ -19,7 +19,7 @@
 package org.apache.oozie.workflow.lite;
 
 import org.apache.commons.codec.binary.Base64;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.io.Writable;
 import org.apache.oozie.ErrorCode;
diff --git core/src/test/java/org/apache/oozie/TestCoordinatorEngine.java core/src/test/java/org/apache/oozie/TestCoordinatorEngine.java
index 5070f956..7d23c617 100644
--- core/src/test/java/org/apache/oozie/TestCoordinatorEngine.java
+++ core/src/test/java/org/apache/oozie/TestCoordinatorEngine.java
@@ -18,7 +18,7 @@
 
 package org.apache.oozie;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.oozie.client.CoordinatorAction;
 import org.apache.oozie.client.CoordinatorJob;
diff --git core/src/test/java/org/apache/oozie/TestLocalOozieClientCoord.java core/src/test/java/org/apache/oozie/TestLocalOozieClientCoord.java
index d1a17635..fda714ea 100644
--- core/src/test/java/org/apache/oozie/TestLocalOozieClientCoord.java
+++ core/src/test/java/org/apache/oozie/TestLocalOozieClientCoord.java
@@ -28,7 +28,7 @@ import java.util.List;
 import java.util.NoSuchElementException;
 import java.util.Properties;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.oozie.client.CoordinatorJob;
 import org.apache.oozie.client.Job;
 import org.apache.oozie.client.OozieClient;
diff --git core/src/test/java/org/apache/oozie/command/TestSLAAlertXCommand.java core/src/test/java/org/apache/oozie/command/TestSLAAlertXCommand.java
index ce598851..31c994f1 100644
--- core/src/test/java/org/apache/oozie/command/TestSLAAlertXCommand.java
+++ core/src/test/java/org/apache/oozie/command/TestSLAAlertXCommand.java
@@ -221,19 +221,19 @@ public class TestSLAAlertXCommand extends XDataTestCase {
         Date nominalTime1 = DateUtils.parseDateUTC(data);
         addRecordToCoordActionTable(coord1.getId(), 1, CoordinatorAction.Status.WAITING, "coord-action-get.xml", 1,
                 nominalTime1);
-        Date nominalTime2 = org.apache.commons.lang.time.DateUtils.addDays(nominalTime1, 1);
+        Date nominalTime2 = org.apache.commons.lang3.time.DateUtils.addDays(nominalTime1, 1);
 
         addRecordToCoordActionTable(coord1.getId(), 2, CoordinatorAction.Status.WAITING, "coord-action-get.xml", 1,
                 nominalTime2);
 
-        Date nominalTime3 = org.apache.commons.lang.time.DateUtils.addDays(nominalTime1, 2);
+        Date nominalTime3 = org.apache.commons.lang3.time.DateUtils.addDays(nominalTime1, 2);
         addRecordToCoordActionTable(coord1.getId(), 3, CoordinatorAction.Status.WAITING, "coord-action-get.xml", 1,
                 nominalTime3);
 
-        Date nominalTime4 = org.apache.commons.lang.time.DateUtils.addDays(nominalTime1, 3);
+        Date nominalTime4 = org.apache.commons.lang3.time.DateUtils.addDays(nominalTime1, 3);
         addRecordToCoordActionTable(coord1.getId(), 4, CoordinatorAction.Status.WAITING, "coord-action-get.xml", 1,
                 nominalTime4);
-        Date nominalTime5 = org.apache.commons.lang.time.DateUtils.addDays(nominalTime1, 4);
+        Date nominalTime5 = org.apache.commons.lang3.time.DateUtils.addDays(nominalTime1, 4);
         addRecordToCoordActionTable(coord1.getId(), 5, CoordinatorAction.Status.WAITING, "coord-action-get.xml", 1,
                 nominalTime5);
 
diff --git core/src/test/java/org/apache/oozie/command/coord/TestAbandonedCoordChecker.java core/src/test/java/org/apache/oozie/command/coord/TestAbandonedCoordChecker.java
index 2af6db60..b9d59807 100644
--- core/src/test/java/org/apache/oozie/command/coord/TestAbandonedCoordChecker.java
+++ core/src/test/java/org/apache/oozie/command/coord/TestAbandonedCoordChecker.java
@@ -20,7 +20,7 @@ package org.apache.oozie.command.coord;
 
 import java.util.Date;
 
-import org.apache.commons.lang.time.DateUtils;
+import org.apache.commons.lang3.time.DateUtils;
 import org.apache.oozie.CoordinatorJobBean;
 import org.apache.oozie.client.CoordinatorAction;
 import org.apache.oozie.client.CoordinatorJob;
diff --git core/src/test/java/org/apache/oozie/command/coord/TestCoordSubmitXCommand.java core/src/test/java/org/apache/oozie/command/coord/TestCoordSubmitXCommand.java
index 6e52a8ef..f2d84338 100644
--- core/src/test/java/org/apache/oozie/command/coord/TestCoordSubmitXCommand.java
+++ core/src/test/java/org/apache/oozie/command/coord/TestCoordSubmitXCommand.java
@@ -1408,7 +1408,7 @@ public class TestCoordSubmitXCommand extends XDataTestCase {
         IOUtils.copyCharStream(reader, writer);
         conf.set(OozieClient.COORDINATOR_APP_PATH, appPathFile.toURI().toString());
         conf.set("start", DateUtils.formatDateOozieTZ(new Date()));
-        conf.set("end", DateUtils.formatDateOozieTZ(org.apache.commons.lang.time.DateUtils.addMonths(new Date(), 1)));
+        conf.set("end", DateUtils.formatDateOozieTZ(org.apache.commons.lang3.time.DateUtils.addMonths(new Date(), 1)));
         conf.set("frequency", "coord:days(1)");
         conf.set(OozieClient.USER_NAME, getTestUser());
         reader = IOUtils.getResourceAsReader("wf-credentials.xml", -1);
@@ -1462,8 +1462,8 @@ public class TestCoordSubmitXCommand extends XDataTestCase {
         appPathFile = new File(getTestCaseDir(), "coordinator.xml");
         conf.set(OozieClient.COORDINATOR_APP_PATH, appPathFile.toURI().toString());
         conf.set("wfAppPath", appPathFile.getPath());
-        conf.set("start", DateUtils.formatDateOozieTZ(org.apache.commons.lang.time.DateUtils.addMonths(new Date(), -1)));
-        conf.set("end", DateUtils.formatDateOozieTZ(org.apache.commons.lang.time.DateUtils.addMonths(new Date(), 1)));
+        conf.set("start", DateUtils.formatDateOozieTZ(org.apache.commons.lang3.time.DateUtils.addMonths(new Date(), -1)));
+        conf.set("end", DateUtils.formatDateOozieTZ(org.apache.commons.lang3.time.DateUtils.addMonths(new Date(), 1)));
 
         conf.set(OozieClient.USER_NAME, getTestUser());
         conf.set("nominal_time", DateUtils.formatDateOozieTZ(otherNominalTime));
@@ -1477,15 +1477,15 @@ public class TestCoordSubmitXCommand extends XDataTestCase {
         conf = new XConfiguration();
         conf.set(OozieClient.COORDINATOR_APP_PATH, appPathFile.toURI().toString());
         conf.set("wfAppPath", appPathFile.getPath());
-        conf.set("start", DateUtils.formatDateOozieTZ(org.apache.commons.lang.time.DateUtils.addMonths(new Date(), -1)));
-        conf.set("end", DateUtils.formatDateOozieTZ(org.apache.commons.lang.time.DateUtils.addMonths(new Date(), 1)));
+        conf.set("start", DateUtils.formatDateOozieTZ(org.apache.commons.lang3.time.DateUtils.addMonths(new Date(), -1)));
+        conf.set("end", DateUtils.formatDateOozieTZ(org.apache.commons.lang3.time.DateUtils.addMonths(new Date(), 1)));
 
         conf.set(OozieClient.USER_NAME, getTestUser());
         conf.set("nominal_time",
-                DateUtils.formatDateOozieTZ(org.apache.commons.lang.time.DateUtils.addMonths(new Date(), -1)));
+                DateUtils.formatDateOozieTZ(org.apache.commons.lang3.time.DateUtils.addMonths(new Date(), -1)));
         conf.set(OozieClient.USER_NAME, getTestUser());
         conf.set("nominal_time",
-                DateUtils.formatDateOozieTZ(org.apache.commons.lang.time.DateUtils.addMonths(new Date(), -1)));
+                DateUtils.formatDateOozieTZ(org.apache.commons.lang3.time.DateUtils.addMonths(new Date(), -1)));
         coordId = new CoordSubmitXCommand(conf).call();
         new CoordMaterializeTransitionXCommand(coordId, 3600).call();
         slaCalc = calc.get(coordId + "@" + 1);
@@ -1496,7 +1496,7 @@ public class TestCoordSubmitXCommand extends XDataTestCase {
         conf.set(OozieClient.COORDINATOR_APP_PATH, appPathFile.toURI().toString());
         conf.set("wfAppPath", appPathFile.getPath());
         conf.set("start", DateUtils.formatDateOozieTZ(new Date()));
-        conf.set("end", DateUtils.formatDateOozieTZ(org.apache.commons.lang.time.DateUtils.addMonths(new Date(), 1)));
+        conf.set("end", DateUtils.formatDateOozieTZ(org.apache.commons.lang3.time.DateUtils.addMonths(new Date(), 1)));
 
         conf.set(OozieClient.USER_NAME, getTestUser());
         conf.set("nominal_time", DateUtils.formatDateOozieTZ(new Date()));
@@ -1518,8 +1518,8 @@ public class TestCoordSubmitXCommand extends XDataTestCase {
         Writer writer = new FileWriter(appPathFile);
         IOUtils.copyCharStream(reader, writer);
         conf.set(OozieClient.COORDINATOR_APP_PATH, appPathFile.toURI().toString());
-        conf.set("start", DateUtils.formatDateOozieTZ(org.apache.commons.lang.time.DateUtils.addDays(new Date(), -1)));
-        conf.set("end", DateUtils.formatDateOozieTZ(org.apache.commons.lang.time.DateUtils.addMonths(new Date(), 1)));
+        conf.set("start", DateUtils.formatDateOozieTZ(org.apache.commons.lang3.time.DateUtils.addDays(new Date(), -1)));
+        conf.set("end", DateUtils.formatDateOozieTZ(org.apache.commons.lang3.time.DateUtils.addMonths(new Date(), 1)));
         conf.set(OozieClient.USER_NAME, getTestUser());
         reader = IOUtils.getResourceAsReader("wf-credentials.xml", -1);
         appPathFile = new File(getTestCaseDir(), "workflow.xml");
diff --git core/src/test/java/org/apache/oozie/command/wf/TestSubmitXCommand.java core/src/test/java/org/apache/oozie/command/wf/TestSubmitXCommand.java
index e71a6627..2bc0baa4 100644
--- core/src/test/java/org/apache/oozie/command/wf/TestSubmitXCommand.java
+++ core/src/test/java/org/apache/oozie/command/wf/TestSubmitXCommand.java
@@ -27,7 +27,7 @@ import java.io.PrintWriter;
 import java.io.StringReader;
 import java.net.URI;
 
-import org.apache.commons.lang.RandomStringUtils;
+import org.apache.commons.lang3.RandomStringUtils;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.oozie.ErrorCode;
 import org.apache.oozie.WorkflowActionBean;
diff --git core/src/test/java/org/apache/oozie/executor/jpa/TestWorkflowsJobGetJPAExecutor.java core/src/test/java/org/apache/oozie/executor/jpa/TestWorkflowsJobGetJPAExecutor.java
index 992f5666..ca7b3032 100644
--- core/src/test/java/org/apache/oozie/executor/jpa/TestWorkflowsJobGetJPAExecutor.java
+++ core/src/test/java/org/apache/oozie/executor/jpa/TestWorkflowsJobGetJPAExecutor.java
@@ -246,7 +246,7 @@ public class TestWorkflowsJobGetJPAExecutor extends XDataTestCase {
         Date createdTime2 = DateUtils.parseDateUTC("2012-02-01T10:00Z");
         Date createdTime3 = DateUtils.parseDateUTC("2012-03-01T10:00Z");
         Date createdTime4 = DateUtils.parseDateUTC("2012-04-01T10:00Z");
-        Date createdTime5 = org.apache.commons.lang.time.DateUtils.addHours(new Date(), -5);
+        Date createdTime5 = org.apache.commons.lang3.time.DateUtils.addHours(new Date(), -5);
         WorkflowJobBean wrkJob = addRecordToWfJobTable(WorkflowJob.Status.PREP, WorkflowInstance.Status.PREP);
         wrkJob.setCreatedTime(createdTime1);
         WorkflowJobQueryExecutor.getInstance().executeUpdate(WorkflowJobQuery.UPDATE_WORKFLOW, wrkJob);
diff --git core/src/test/java/org/apache/oozie/service/TestAuthorizationService.java core/src/test/java/org/apache/oozie/service/TestAuthorizationService.java
index be5242ef..36e48085 100644
--- core/src/test/java/org/apache/oozie/service/TestAuthorizationService.java
+++ core/src/test/java/org/apache/oozie/service/TestAuthorizationService.java
@@ -28,7 +28,7 @@ import java.util.Arrays;
 import java.util.List;
 import java.util.UUID;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
diff --git core/src/test/java/org/apache/oozie/util/TestStringSerializationUtil.java core/src/test/java/org/apache/oozie/util/TestStringSerializationUtil.java
index 76864fff..e355c5aa 100644
--- core/src/test/java/org/apache/oozie/util/TestStringSerializationUtil.java
+++ core/src/test/java/org/apache/oozie/util/TestStringSerializationUtil.java
@@ -17,7 +17,7 @@
  */
 package org.apache.oozie.util;
 
-import org.apache.commons.lang.RandomStringUtils;
+import org.apache.commons.lang3.RandomStringUtils;
 import org.junit.Test;
 
 import java.io.ByteArrayInputStream;
diff --git core/src/test/java/org/apache/oozie/util/db/TestOperationRetryHandler.java core/src/test/java/org/apache/oozie/util/db/TestOperationRetryHandler.java
index ae94199c..c61b1e55 100644
--- core/src/test/java/org/apache/oozie/util/db/TestOperationRetryHandler.java
+++ core/src/test/java/org/apache/oozie/util/db/TestOperationRetryHandler.java
@@ -26,7 +26,7 @@ import static org.mockito.Mockito.mock;
 
 import java.util.concurrent.Callable;
 
-import org.apache.commons.lang.mutable.MutableInt;
+import org.apache.commons.lang3.mutable.MutableInt;
 import org.junit.Test;
 import org.mockito.invocation.InvocationOnMock;
 import org.mockito.stubbing.Answer;
diff --git core/src/test/java/org/apache/oozie/workflow/lite/TestLiteWorkflowApp.java core/src/test/java/org/apache/oozie/workflow/lite/TestLiteWorkflowApp.java
index 20264397..aea2554e 100644
--- core/src/test/java/org/apache/oozie/workflow/lite/TestLiteWorkflowApp.java
+++ core/src/test/java/org/apache/oozie/workflow/lite/TestLiteWorkflowApp.java
@@ -18,7 +18,7 @@
 package org.apache.oozie.workflow.lite;
 
 import com.google.common.base.Strings;
-import org.apache.commons.lang.RandomStringUtils;
+import org.apache.commons.lang3.RandomStringUtils;
 import org.apache.oozie.service.LiteWorkflowStoreService;
 import org.apache.oozie.service.Services;
 import org.apache.oozie.test.XTestCase;
diff --git core/src/test/java/org/apache/oozie/workflow/lite/TestLiteWorkflowLib.java core/src/test/java/org/apache/oozie/workflow/lite/TestLiteWorkflowLib.java
index a479de02..4ea02eec 100644
--- core/src/test/java/org/apache/oozie/workflow/lite/TestLiteWorkflowLib.java
+++ core/src/test/java/org/apache/oozie/workflow/lite/TestLiteWorkflowLib.java
@@ -19,7 +19,7 @@
 package org.apache.oozie.workflow.lite;
 
 
-import org.apache.commons.lang.RandomStringUtils;
+import org.apache.commons.lang3.RandomStringUtils;
 import org.apache.oozie.service.Services;
 import org.apache.oozie.workflow.WorkflowException;
 import org.apache.oozie.workflow.WorkflowInstance;
diff --git pom.xml pom.xml
index 08b17d35..c69df893 100644
--- pom.xml
+++ pom.xml
@@ -115,6 +115,7 @@
          <jackson.version>2.6.5</jackson.version>
          <log4j.version>1.2.17</log4j.version>
          <activemq.version>5.15.3</activemq.version>
+        <commons.lang3.version>3.3.2</commons.lang3.version>
          <httpcore.version>4.3.3</httpcore.version>
          <httpclient.version>4.3.6</httpclient.version>
          <kyro.version>2.22</kyro.version>
@@ -524,6 +525,10 @@
                         <groupId>org.apache.hive</groupId>
                         <artifactId>hive-cli</artifactId>
                     </exclusion>
+                    <exclusion>
+                        <groupId>commons-lang</groupId>
+                        <artifactId>commons-lang</artifactId>
+                    </exclusion>
                 </exclusions>
             </dependency>
 
@@ -533,6 +538,10 @@
                 <version>${hive.version}</version>
                 <scope>provided</scope>
                 <exclusions>
+                    <exclusion>
+                        <groupId>commons-lang</groupId>
+                        <artifactId>commons-lang</artifactId>
+                    </exclusion>
                     <exclusion>
                         <groupId>org.apache.hadoop</groupId>
                         <artifactId>hadoop-core</artifactId>
@@ -806,15 +815,13 @@
                         <groupId>junit</groupId>
                         <artifactId>junit</artifactId>
                     </exclusion>
+                    <exclusion>
+                        <groupId>commons-lang</groupId>
+                        <artifactId>commons-lang</artifactId>
+                    </exclusion>
                 </exclusions>
             </dependency>
 
-            <dependency>
-                <groupId>commons-lang</groupId>
-                <artifactId>commons-lang</artifactId>
-                <version>2.4</version>
-            </dependency>
-
             <dependency>
                 <groupId>org.apache.openjpa</groupId>
                 <artifactId>openjpa-jdbc</artifactId>
@@ -855,18 +862,36 @@
                 <groupId>org.apache.hadoop</groupId>
                 <artifactId>hadoop-common</artifactId>
                 <version>${hadoop.version}</version>
+                <exclusions>
+                    <exclusion>
+                        <artifactId>commons-lang</artifactId>
+                        <groupId>commons-lang</groupId>
+                    </exclusion>
+                </exclusions>
             </dependency>
 
             <dependency>
                 <groupId>org.apache.hadoop</groupId>
                 <artifactId>hadoop-yarn-api</artifactId>
                 <version>${hadoop.version}</version>
+                <exclusions>
+                    <exclusion>
+                        <artifactId>commons-lang</artifactId>
+                        <groupId>commons-lang</groupId>
+                    </exclusion>
+                </exclusions>
             </dependency>
 
             <dependency>
                 <groupId>org.apache.hadoop</groupId>
                 <artifactId>hadoop-yarn-common</artifactId>
                 <version>${hadoop.version}</version>
+                <exclusions>
+                    <exclusion>
+                        <artifactId>commons-lang</artifactId>
+                        <groupId>commons-lang</groupId>
+                    </exclusion>
+                </exclusions>
             </dependency>
 
             <dependency>
@@ -1209,6 +1234,10 @@
                         <artifactId>zookeeper</artifactId>
                         <groupId>org.apache.zookeeper</groupId>
                     </exclusion>
+                    <exclusion>
+                            <groupId>commons-lang</groupId>
+                            <artifactId>commons-lang</artifactId>
+                    </exclusion>
                 </exclusions>
             </dependency>
 
@@ -1366,7 +1395,7 @@
             <dependency>
                 <groupId>org.apache.commons</groupId>
                 <artifactId>commons-lang3</artifactId>
-                <version>3.3.2</version>
+                <version>${commons.lang3.version}</version>
             </dependency>
 
             <dependency>
diff --git sharelib/oozie/pom.xml sharelib/oozie/pom.xml
index cc97bdba..fc411d52 100644
--- sharelib/oozie/pom.xml
+++ sharelib/oozie/pom.xml
@@ -44,6 +44,12 @@
             <scope>provided</scope>
         </dependency>
 
+        <dependency>
+            <groupId>org.apache.commons</groupId>
+            <artifactId>commons-lang3</artifactId>
+            <scope>compile</scope>
+        </dependency>
+
         <dependency>
             <groupId>org.apache.hadoop</groupId>
             <artifactId>hadoop-minicluster</artifactId>
diff --git sharelib/oozie/src/main/java/org/apache/oozie/action/hadoop/LauncherMain.java sharelib/oozie/src/main/java/org/apache/oozie/action/hadoop/LauncherMain.java
index 5658ea5d..c57c1ff7 100644
--- sharelib/oozie/src/main/java/org/apache/oozie/action/hadoop/LauncherMain.java
+++ sharelib/oozie/src/main/java/org/apache/oozie/action/hadoop/LauncherMain.java
@@ -51,7 +51,7 @@ import org.apache.hadoop.util.Shell;
 import com.google.common.annotations.VisibleForTesting;
 import com.google.common.base.Preconditions;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.yarn.api.ApplicationClientProtocol;
 import org.apache.hadoop.yarn.api.protocolrecords.ApplicationsRequestScope;
 import org.apache.hadoop.yarn.api.protocolrecords.GetApplicationsRequest;
diff --git sharelib/pig/pom.xml sharelib/pig/pom.xml
index afa8ab8e..f6fe785c 100644
--- sharelib/pig/pom.xml
+++ sharelib/pig/pom.xml
@@ -50,12 +50,18 @@
             <artifactId>jline</artifactId>
             <scope>compile</scope>
         </dependency>
+
         <dependency>
             <groupId>org.python</groupId>
             <artifactId>jython-standalone</artifactId>
             <scope>compile</scope>
         </dependency>
 
+        <dependency>
+            <groupId>org.apache.commons</groupId>
+            <artifactId>commons-lang3</artifactId>
+        </dependency>
+
         <dependency>
             <groupId>org.antlr</groupId>
             <artifactId>antlr-runtime</artifactId>
@@ -81,12 +87,6 @@
             <scope>test</scope>
         </dependency>
 
-        <dependency>
-            <groupId>org.apache.commons</groupId>
-            <artifactId>commons-lang3</artifactId>
-            <scope>test</scope>
-        </dependency>
-
         <dependency>
             <groupId>org.apache.hadoop</groupId>
             <artifactId>hadoop-minicluster</artifactId>
diff --git sharelib/pig/src/main/java/org/apache/oozie/action/hadoop/PigMain.java sharelib/pig/src/main/java/org/apache/oozie/action/hadoop/PigMain.java
index a4ead77c..101260bb 100644
--- sharelib/pig/src/main/java/org/apache/oozie/action/hadoop/PigMain.java
+++ sharelib/pig/src/main/java/org/apache/oozie/action/hadoop/PigMain.java
@@ -26,7 +26,7 @@ import org.apache.pig.tools.pigstats.PigStats;
 import com.google.common.annotations.VisibleForTesting;
 
 import org.apache.commons.io.IOUtils;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.Path;
 
diff --git sharelib/spark/pom.xml sharelib/spark/pom.xml
index 496f2e7e..9eec4bfc 100644
--- sharelib/spark/pom.xml
+++ sharelib/spark/pom.xml
@@ -55,8 +55,8 @@
             </exclusions>
         </dependency>
         <dependency>
-            <groupId>commons-lang</groupId>
-            <artifactId>commons-lang</artifactId>
+            <groupId>org.apache.commons</groupId>
+            <artifactId>commons-lang3</artifactId>
             <scope>compile</scope>
         </dependency>
         <dependency>
diff --git sharelib/spark/src/main/java/org/apache/oozie/action/hadoop/SparkArgsExtractor.java sharelib/spark/src/main/java/org/apache/oozie/action/hadoop/SparkArgsExtractor.java
index 42f920b7..ff1f1bb2 100644
--- sharelib/spark/src/main/java/org/apache/oozie/action/hadoop/SparkArgsExtractor.java
+++ sharelib/spark/src/main/java/org/apache/oozie/action/hadoop/SparkArgsExtractor.java
@@ -21,7 +21,7 @@ package org.apache.oozie.action.hadoop;
 import com.google.common.annotations.VisibleForTesting;
 import com.google.common.base.Strings;
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.filecache.DistributedCache;
 import org.apache.hadoop.fs.Path;
diff --git sharelib/spark/src/main/java/org/apache/oozie/action/hadoop/SparkOptionsSplitter.java sharelib/spark/src/main/java/org/apache/oozie/action/hadoop/SparkOptionsSplitter.java
index 5ccd37fc..b67ddf96 100644
--- sharelib/spark/src/main/java/org/apache/oozie/action/hadoop/SparkOptionsSplitter.java
+++ sharelib/spark/src/main/java/org/apache/oozie/action/hadoop/SparkOptionsSplitter.java
@@ -19,7 +19,7 @@
 package org.apache.oozie.action.hadoop;
 
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 
 import java.util.ArrayList;
 import java.util.List;
diff --git tools/src/main/java/org/apache/oozie/tools/diag/DiagBundleCollectorDriver.java tools/src/main/java/org/apache/oozie/tools/diag/DiagBundleCollectorDriver.java
index de8e8b1d..dfab2069 100644
--- tools/src/main/java/org/apache/oozie/tools/diag/DiagBundleCollectorDriver.java
+++ tools/src/main/java/org/apache/oozie/tools/diag/DiagBundleCollectorDriver.java
@@ -21,7 +21,7 @@ package org.apache.oozie.tools.diag;
 import com.google.common.io.Files;
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import org.apache.commons.io.FileUtils;
-import org.apache.commons.lang.time.FastDateFormat;
+import org.apache.commons.lang3.time.FastDateFormat;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.oozie.client.OozieClient;
 import org.apache.oozie.client.OozieClientException;
diff --git tools/src/main/java/org/apache/oozie/tools/diag/OozieLauncherLogFetcher.java tools/src/main/java/org/apache/oozie/tools/diag/OozieLauncherLogFetcher.java
index d12e9633..2afe4420 100644
--- tools/src/main/java/org/apache/oozie/tools/diag/OozieLauncherLogFetcher.java
+++ tools/src/main/java/org/apache/oozie/tools/diag/OozieLauncherLogFetcher.java
@@ -18,7 +18,7 @@
 
 package org.apache.oozie.tools.diag;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.FileContext;
 import org.apache.hadoop.fs.FileStatus;
